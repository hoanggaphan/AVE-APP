// Mixin for button
//

@mixin button($color, $bg-color, $border-color, $color-hover, $bg-color-hover, $border-color-hover) {
  padding: 2rem 3rem;
  color: $color;
  letter-spacing: 2px;
  
  border: 2px solid $border-color;
  background-color: $bg-color;
  transition: all .3s;

  &:hover {
    color: $color-hover;
    background-color: $bg-color-hover;
    border-color: $border-color-hover;
  }
}

// End Mixin for button


// Mixin for Grid
//

@mixin Grid($columns, $columns-width, $rows, $rows-height, $gap) {
  display: grid;
  grid-template-columns: repeat($columns, $columns-width);
  grid-template-rows: repeat($rows, $rows-height);
  gap: $gap;
}

// End Mixin for Grid


// Mixin for font text
//

@mixin font-size($font-size, $font-weight, $line-height , $text-transform, $color) {
  font-size: $font-size;
  font-weight: $font-weight;
  line-height: $line-height;
  text-transform: $text-transform;
  color: $color;
}

@mixin text-ellipsis($line-clamp) {
  display: -webkit-box;
  -webkit-line-clamp: $line-clamp;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// End Mixin for text


// Mixin for responsive
//
// Resolution is obtained from Material UI

// $XS: 0; 
$SM: 600px; 
$MD: 960px;  
$LG: 1280px;  
$XL: 1920px;  

@mixin Responsive($canvas) {
  @if $canvas == SM {
    @media only screen and(min-width: $SM) {
      @content;
    }
  }

  @if $canvas == MD {
    @media only screen and(min-width: $MD) {
      @content;
    }
  }

  @if $canvas == LG {
    @media only screen and(min-width: $LG) {
      @content;
    }
  }

  @if $canvas == XL {
    @media only screen and(min-width: $XL) {
      @content;
    }
  }
}

// End Mixin for responsive